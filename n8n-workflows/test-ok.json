{
  "name": "test",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "student-ai-chat",
        "responseMode": "responseNode",
        "options": {
          "rawBody": true
        }
      },
      "id": "fa7eeb72-83d2-4004-876f-7d42248cfbfa",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1720,
        120
      ],
      "webhookId": "student-ai-chat"
    },
    {
      "parameters": {
        "functionCode": "// 解析输入消息和用户信息\nconst webhookData = $input.first().json;\n\n// Debug: 查看完整的webhook数据结构\nconsole.log('Complete webhook data:', JSON.stringify(webhookData, null, 2));\n\n// 尝试多种可能的数据路径\nlet message = '';\nlet userId = '';\nlet conversationId = '';\n\n// 检查不同的数据路径\nif (webhookData.body) {\n  // 如果数据在body中\n  message = webhookData.body.message || '';\n  userId = webhookData.body.userId || '';\n  conversationId = webhookData.body.conversationId || '';\n} else {\n  // 如果数据在根级别\n  message = webhookData.message || '';\n  userId = webhookData.userId || '';\n  conversationId = webhookData.conversationId || '';\n}\n\nconsole.log('Extracted - message:', message, 'userId:', userId, 'conversationId:', conversationId);\n\n// 消息分类逻辑\nfunction classifyMessage(message) {\n  const msg = (message || '').toLowerCase();\n  if (msg.includes('成绩') || msg.includes('分数') || msg.includes('课程') || msg.includes('学分')) {\n    return 'learning_query';\n  }\n  if (msg.includes('怎么学') || msg.includes('建议') || msg.includes('计划') || msg.includes('方法')) {\n    return 'learning_advice';\n  }\n  if (msg.includes('什么是') || msg.includes('如何') || msg.includes('代码') || msg.includes('算法') || msg.includes('数据结构') || msg.includes('编程') || msg.includes('递归') || msg.includes('机器学习') || msg.includes('数据库')) {\n    return 'knowledge_qa';\n  }\n  return 'general_chat';\n}\n\nconst messageType = classifyMessage(message);\n\nreturn {\n  message: message,\n  userId: userId,\n  conversationId: conversationId,\n  messageType: messageType,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "ea5a56d0-f4a4-4e77-9a56-07965cd7ca77",
      "name": "消息分类",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -1500,
        120
      ]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{ $json.messageType }}",
        "rules": {
          "rules": [
            {
              "value2": "knowledge_qa"
            },
            {
              "value2": "learning_query"
            },
            {
              "value2": "learning_advice"
            }
          ]
        },
        "fallbackOutput": 1
      },
      "id": "0cfcb4bb-0586-43a1-88a5-0472d85de11b",
      "name": "路由选择",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -1280,
        120
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "knowledge_documents",
        "limit": 3,
        "filters": {
          "conditions": [
            {
              "keyName": "content",
              "condition": "ilike",
              "keyValue": "={{ '%' + $json.message + '%' }}"
            }
          ]
        }
      },
      "id": "946892af-5b71-4da5-9768-493607964864",
      "name": "RAG知识检索",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1060,
        20
      ],
      "credentials": {
        "supabaseApi": {
          "id": "WWm7t7sYsipMoQ2k",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// 构建学生AI助手的专业提示词\nconst inputData = $input.first().json;\nconst knowledgeData = $input.all().length > 1 ? $input.all().slice(1) : [];\n\n// 基础系统提示词\nlet systemPrompt = `你是启明星学习平台的AI学习助手，专门为河北师范大学软件学院的学生提供学习支持。\\n\\n你的角色和特点：\\n- 友好、耐心、专业的学习伙伴\\n- 熟悉软件工程、计算机科学相关课程\\n- 善于用简单易懂的方式解释复杂概念\\n- 注重实践应用和代码示例\\n\\n你的能力：\\n- 回答专业课程问题（数据结构、算法、编程语言、数据库等）\\n- 提供学习方法建议和学习计划\\n- 解答编程和技术问题\\n- 提供代码示例和调试帮助\\n\\n回答要求：\\n- 简洁明了，重点突出\\n- 结合具体的学习情境和实例\\n- 提供实用的建议和资源\\n- 保持积极鼓励的语调\\n- 如果涉及代码，请提供完整可运行的示例`;\n\n// 添加知识库上下文\nif (knowledgeData.length > 0) {\n  systemPrompt += '\\n\\n相关知识库内容：\\n';\n  knowledgeData.forEach((item, index) => {\n    if (item.json && item.json.title && item.json.content) {\n      systemPrompt += `${index + 1}. ${item.json.title}\\n${item.json.content}\\n\\n`;\n    }\n  });\n  systemPrompt += '请结合以上知识库内容回答用户问题。';\n}\n\n// 根据消息类型调整提示词\nconst messageType = inputData.messageType || 'general_chat';\nswitch (messageType) {\n  case 'knowledge_qa':\n    systemPrompt += '\\n\\n用户正在咨询专业知识，请提供详细、准确的技术解答，包含概念解释、实际应用和代码示例。';\n    break;\n  case 'learning_advice':\n    systemPrompt += '\\n\\n用户需要学习建议，请提供具体可行的学习方法、时间规划和学习资源推荐。';\n    break;\n  case 'learning_query':\n    systemPrompt += '\\n\\n用户在询问学习相关信息，请提供准确的查询结果和建议。';\n    break;\n  default:\n    systemPrompt += '\\n\\n请以友好的方式回答用户的问题。';\n}\n\nreturn {\n  systemPrompt: systemPrompt,\n  userMessage: inputData.message || 'No message provided', // 确保有默认值\n  userId: inputData.userId || 'unknown',\n  conversationId: inputData.conversationId || 'default-id',\n  messageType: messageType,\n  hasKnowledge: knowledgeData.length > 0\n};"
      },
      "id": "6c5a769a-b037-417f-a339-55bbfab64cef",
      "name": "准备Gemini请求",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -840,
        120
      ]
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {
          "maxOutputTokens": 800,
          "temperature": 0.7,
          "topK": 40,
          "topP": 0.8
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -580,
        300
      ],
      "id": "4b7dc823-0fd1-4858-bbf1-1a2475df286a",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "zTsZXEBOGaak4eW5",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// 处理AI助手响应并格式化输出\nconst aiResponse = $json;\nconst requestData = $('准备Gemini请求').first().json;\n\n// 提取AI响应文本\nlet responseText = '';\nif (typeof aiResponse === 'string') {\n  responseText = aiResponse;\n} else if (aiResponse.text) {\n  responseText = aiResponse.text;\n} else if (aiResponse.output) {\n  responseText = aiResponse.output;\n} else if (aiResponse.content) {\n  responseText = aiResponse.content;\n} else {\n  responseText = '抱歉，我无法理解您的问题，请重新描述。';\n}\n\n// 计算响应时间\nconst responseTime = Date.now() - new Date(requestData.timestamp || new Date()).getTime();\n\nreturn {\n  success: true,\n  response: responseText,\n  messageType: requestData.messageType,\n  userId: requestData.userId,\n  conversationId: requestData.conversationId,\n  originalMessage: requestData.userMessage,\n  hasKnowledge: requestData.hasKnowledge,\n  responseTime: Math.max(0, responseTime),\n  model: 'gemini-1.5-flash',\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "83a058b8-1010-42b4-ad49-cb0318bfaa5d",
      "name": "格式化响应",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -220,
        120
      ]
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.conversationId }}"
            },
            {
              "fieldId": "role",
              "fieldValue": "user"
            },
            {
              "fieldId": "content",
              "fieldValue": "={{ $json.originalMessage }}"
            },
            {
              "fieldId": "metadata",
              "fieldValue": "={{ {messageType: $json.messageType, hasKnowledge: $json.hasKnowledge, model: $json.model} }}"
            }
          ]
        }
      },
      "id": "97099bac-e599-499d-9def-18318a82debc",
      "name": "保存用户消息",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "credentials": {
        "supabaseApi": {
          "id": "WWm7t7sYsipMoQ2k",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.conversationId }}"
            },
            {
              "fieldId": "role",
              "fieldValue": "assistant"
            },
            {
              "fieldId": "content",
              "fieldValue": "={{ $json.response }}"
            },
            {
              "fieldId": "metadata",
              "fieldValue": "={{ {messageType: $json.messageType, hasKnowledge: $json.hasKnowledge, responseTime: $json.responseTime, model: $json.model} }}"
            }
          ]
        }
      },
      "id": "c75e78e4-7f1b-4e53-a586-93914035335e",
      "name": "保存AI响应",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        0,
        220
      ],
      "credentials": {
        "supabaseApi": {
          "id": "WWm7t7sYsipMoQ2k",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "c5c78ecb-55b7-4c28-8bcc-81f2c1722c55",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        220,
        120
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.systemPrompt + '\\n\\n用户问题: ' + $json.userMessage + '\\n\\n请提供有帮助的回答：' }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -620,
        120
      ],
      "id": "42a5c4bf-decb-41a5-bcd8-e72e35645875",
      "name": "AI Agent"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "消息分类",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "消息分类": {
      "main": [
        [
          {
            "node": "路由选择",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "路由选择": {
      "main": [
        [
          {
            "node": "RAG知识检索",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "准备Gemini请求",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RAG知识检索": {
      "main": [
        [
          {
            "node": "准备Gemini请求",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "准备Gemini请求": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "格式化响应": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "格式化响应",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0ced1628-0ad2-46de-8958-5682ea110f7c",
  "meta": {
    "instanceId": "fd88bd7e50ed60b59c131695eda187fa1a222a9ce66dab3c69a1b4bb57ecbb64"
  },
  "id": "URQqa1kCYBWQ2TBY",
  "tags": []
}